# Generated by Django 2.2.5 on 2019-09-23 11:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=30)),
                ('mname', models.CharField(max_length=30)),
                ('lname', models.CharField(max_length=30)),
                ('info', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BookItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('genre', models.CharField(choices=[('aaa', 'Action and adventure'), ('ah', 'Alternate history'), ('ath', 'Anthology'), ('cdr', "Children's"), ('cbk', 'Comic book'), ('crm', 'Crime'), ('dra', 'Drama'), ('fai', 'Fairytale'), ('fan', 'Fantasy'), ('nov', 'Novel'), ('hif', 'Historical fiction'), ('hor', 'Horror'), ('mys', 'Mystery'), ('rom', 'Romance'), ('thr', 'Thriller'), ('poe', 'Poetry'), ('sat', 'Satire'), ('scf', 'Science fiction'), ('bio', 'Biography'), ('art', 'Art'), ('cok', 'Cookbook'), ('dia', 'Diary'), ('dic', 'Dictionary'), ('enc', 'Encyclopedia'), ('hea', 'Health'), ('his', 'History'), ('jou', 'Journal'), ('sci', 'Science'), ('seh', 'Self help'), ('prg', 'Programming'), ('bns', 'Business')], max_length=3)),
                ('description', models.TextField()),
                ('price', models.FloatField()),
                ('d_price', models.FloatField(blank=True, null=True)),
                ('authorr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Author')),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='books',
            field=models.ManyToManyField(to='books.BookItem'),
        ),
    ]
